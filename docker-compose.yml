services:
  app:
    build: .
    container_name: grant_scraper_app
    depends_on:
      selenium-hub:
        condition: service_healthy
      db:
        condition: service_started
    environment:
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - .:/app
    command: tail -f /dev/null
    #python app/main.py
    ports:
      - "8080:5000"

  db:
    image: postgres:15
    container_name: postgres_opportunities
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: redis_grants
    platform: linux/amd64
    ports:
      - "6379:6379"
  
  llm:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    container_name: ollama_llm
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    depends_on:
      db:
        condition: service_started
    environment:
      - OLLAMA_HOST=0.0.0.0:11434  

    

  selenium-hub:
    image: seleniarm/hub:latest
    container_name: selenium_hub
    ports:
      - "4444:4444"  
      - "4442:4442"  
      - "4443:4443"  
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4444/wd/hub/status"]
      interval: 5s
      timeout: 5s
      retries: 30

  chrome-node:
    image: seleniarm/node-chromium:latest
    container_name: chrome_node
    depends_on:
      - selenium-hub
    shm_size: 2gb
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=4
      - SE_VNC_ENABLED=true
    ports:
      - "7900:7900"
  
  rq_worker:
    build: .
    container_name: rq_worker
    command: python app/workers/rq_worker.py
    restart: unless-stopped
    depends_on:
      selenium-hub:
        condition: service_healthy
      db:
        condition: service_started
      redis:
        condition: service_started
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=${DATABASE_URL}
      # dev on Mac: leave LLM_BASE_URL unset to use http://host.docker.internal:11434
      - SELENIUM_REMOTE_URL=http://selenium-hub:4444/wd/hub
    volumes:
      - .:/app
    working_dir: /app

  rq_scheduler:
    build: .
    container_name: scheduler_runner
    command: python app/workers/scheduler_runner.py
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=${DATABASE_URL}
      # dev on Mac: leave LLM_BASE_URL unset to use http://host.docker.internal:11434
    volumes:
      - .:/app
    working_dir: /app

  

volumes:
  pgdata:
  ollama_models:
